{	This file is part of EasyFit, a nonlinear fitting program for the Macintoshª.		Copyright © 1989-1991 Matteo Vaccari & Mario Negri Institute.	All rights reserved.}{--------------------------------------------------------------------------------------------------}{$S CallFit}PROCEDURE TWorkingDialog.Pose(numOfOperations: INTEGER; txt: Str255);CONST kWorkingWindowType = 1020;VAR aWindow:				TWindow;		aPercDoneBar:		TPercDoneBarView;		aStaticText:		TStaticText;		aDialogView:		TDialogView;BEGIN	{ÊMake sure Free will work }	fWindow := NIL;		{ÊRemove buzzwords }	FixEditMenu;	{ÊJust to be sure }	gApplication.CommitLastCommand;		{ÊCreate the window and the views from their template }	aWindow := NewTemplateWindow(kWorkingWindowType, NIL);	FailNil(aWindow);	fWindow := aWindow;		{ÊFind the dialog subView }	aDialogView := TDialogView(aWindow.FindSubView('DLOG'));	fDialogView := aDialogView;		{ÊInit the Percentage Done bar }	aPercDoneBar := TPercDoneBarView(aWindow.FindSubView('PERC'));	aPercDoneBar.IPercDoneBarView(numOfOperations);	fPercDoneBar := aPercDoneBar;		{ÊSet the text }	aStaticText := TStaticText(aWindow.FindSubView('TEXT'));	aStaticText.SetText(txt, kDontRedraw);	fStaticText := aStaticText;		{ÊCenter window like a dialog }	aWindow.Center({horizontally} TRUE, {vertically} TRUE, {fordialog} TRUE);		{ÊOpen the window }	aWindow.Open;	fDialogView.fDismissed := False;END;{--------------------------------------------------------------------------------------------------}{$S CallFit}PROCEDURE TWorkingDialog.Free;		OVERRIDE;BEGIN	IF fWindow <> NIL THEN		fWindow.Close;	INHERITED Free;END;		{--------------------------------------------------------------------------------------------------}{$S Fit} {ÊMoved from segment CallFit to Fit to make CallFit size < 32K }{ÊIf the user presses Abort, then PollEvent returns TRUE,	else returns false. }FUNCTION TWorkingDialog.PollEvent: BOOLEAN;LABEL 99;VAR fi:				FailInfo;		theEvent:	EventRecord;				PROCEDURE HdlPollEvent(error: OSErr; message: LONGINT);		BEGIN			IF error = noErr THEN				GOTO 99											{ If no error then keep the dialog running }						{Êthe dialog will be closed by the DoFit error handler }		END;BEGIN	{ÊWe need to CatchFailures, because a programming error, or whatever, may		happen when we call WaitNextEvent. So, we are prepared to		abort the fit command cleanly, closing the Working dialog. } 	CatchFailures(fi, HdlPollEvent);	WHILE EventAvail(gMainEventMask, theEvent) DO BEGIN		{$IFC MacApp20Def}		gApplication.PollEvent( {allowApplicationToSleep:}ÊTRUE);		{$ELSEC}		gApplication.PollEvent;		{$ENDC}		gApplication.ActivateBusyCursor(FALSE);		SetCursor(gWatchHdl^^);	END;	Success(fi);	99:	IF fDialogView.fDismissed THEN		SetText('StoppingÉ');	PollEvent := fDialogView.fDismissed;END;{--------------------------------------------------------------------------------------------------}{$S Fit} {ÊMoved from segment CallFit to Fit to make CallFit size < 32K }{ Changes the text }PROCEDURE TWorkingDialog.SetText(txt: Str255);BEGIN	fStaticText.SetText(txt, kRedraw);END;		{--------------------------------------------------------------------------------------------------}{$S Fit} {ÊMoved from segment CallFit to Fit to make CallFit size < 32K }{ÊPasses this message on to the "Percentage done" bar }PROCEDURE TWorkingDialog.OperationDone;BEGIN	fPercDoneBar.OperationDone;END;