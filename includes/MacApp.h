/*	Interface to some MacApp utilities used in C.*/#ifndef __MATTEOMACAPP__#define __MATTEOMACAPP__#ifndef __TYPES__#include <Types.h>#endif#ifndef __MEMORY__#include <Memory.h>#endif#ifndef __QUICKDRAW__#include <QuickDraw.h>#endiftypedef struct FailInfo FailInfo;#include <UFailure.h>extern pascal Ptr NewPermPtr(Size logicalSize);extern pascal Handle NewPermHandle(Size logicalSize);extern pascal Boolean PermAllocation(Boolean permanent);/* Write output to the debug window */#if qDebug		pascal DEBUGWRITELN(Str255 s);		pascal PROGRAMBREAK(Str255 s);#endif/* the following things are needed to make GetPort/SetPort work. The	FocusRec definition has been slightly edited, so that we don't need to include	 UMacApp.h (it is written in C++, so we couldn't include it anyway) */typedef long VCoordinate;								/* VCoordinates are 32 bits as compared to QD                                           Coordinates which are 16 bits */struct VPoint {    VCoordinate v, h;};struct VRect {    VCoordinate top,left,bottom,right;};#if  qExperimentalAndUnsupportedtyepdef struct FocusRec {	Boolean printing;	Boolean drawingPictScrap;	void *drawingPictScrapView;			/* it was struct TView* */	void *focusedView;							/* it was struct TView* */	struct VPoint longOffset;	Point org;	GrafPtr port;	RgnHandle clip;	Boolean isValid;								/* TRUE if FocusRec is valid */} FocusRec;#elsetypedef struct FocusRec {	Boolean printing;	Boolean drawingPictScrap;	void *drawingPictScrapView;			/* it was struct TView* */	void *focusedView;							/* it was struct TView* */	struct VPoint longOffset;	Point org;	GrafPtr port;	RgnHandle clip;	Boolean isValid;								/* TRUE if FocusRec is valid */} FocusRec;#endifextern pascal void GetFocus(FocusRec *theFocusRec);	/* gets the current focus into a focusrec. The focusrec.clipRgn must be a valid rgn.			useful for saving and restoring the focus behind MacApp's back.*/extern pascal void SetFocus(FocusRec *theFocusRec);		/* sets the current focus from a focus rec */extern pascal RgnHandle MakeNewRgn(void);		/* Calls NewRgn, then FailNIL*/#endif